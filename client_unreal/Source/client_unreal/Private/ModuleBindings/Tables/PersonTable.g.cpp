// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#include "ModuleBindings/Tables/PersonTable.g.h"
#include "DBCache/UniqueIndex.h"
#include "DBCache/BTreeUniqueIndex.h"
#include "DBCache/ClientCache.h"
#include "DBCache/TableCache.h"

void UPersonTable::PostInitialize()
{
    /** Client cache init and setting up indexes*/
    Data = MakeShared<UClientCache<FPersonType>>();

    TSharedPtr<FTableCache<FPersonType>> PersonTable = Data->GetOrAdd(TableName);
    PersonTable->AddUniqueConstraint<int32>("id", [](const FPersonType& Row) -> const int32& {
        return Row.Id; });

    Id = NewObject<UPersonIdUniqueIndex>(this);
    Id->SetCache(PersonTable);

    /***/
}

FTableAppliedDiff<FPersonType> UPersonTable::Update(TArray<FWithBsatn<FPersonType>> InsertsRef, TArray<FWithBsatn<FPersonType>> DeletesRef)
{
    FTableAppliedDiff<FPersonType> Diff = BaseUpdate<FPersonType>(InsertsRef, DeletesRef, Data, TableName);

    Diff.DeriveUpdatesByPrimaryKey<int32>(
        [](const FPersonType& Row) 
        {
            return Row.Id; 
        }
    );

    return Diff;
}

int32 UPersonTable::Count() const
{
    return GetRowCountFromTable<FPersonType>(Data, TableName);
}

TArray<FPersonType> UPersonTable::Iter() const
{
    return GetAllRowsFromTable<FPersonType>(Data, TableName);
}
